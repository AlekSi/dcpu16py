{"name":"DCPU-16|py","body":"# A Python implementation of Notch's DCPU-16.\r\n\r\nComplete with assembler, disassembler, debugger and video terminal implementations.\r\n\r\nSee http://0x10c.com/doc/dcpu-16.txt for specification of the CPU.\r\n\r\nNotch apparently started doing a 6502 emulator first. Given I did one in\r\nPython <https://github.com/jtauber/applepy> it only seems fitting I now\r\ndo a DCPU-16 implementation in Python too :-)\r\n\r\n\r\n## Status\r\n\r\nRuns a number of example programs successfully. Should be feature-complete at the CPU level.\r\n\r\nA dissassembler and (two) assemblers are also included as well as the emulator. The emulator\r\nincludes a debugger. \r\n\r\n* `./asm.py example.asm example.obj` will assemble Notch's example to object code\r\n* `./disasm.py example.obj` will disassemble the given object code\r\n* `./dcpu16.py example.obj` will execute it (but won't show anything without extra options)\r\n\r\nThere is also an experimental pyparsing-based assembler `./asm_pyparsing.py`\r\ncontributed by Peter Waller. You'll need to `pip install pyparsing` to run it.\r\n\r\n`./dcpu16.py` takes a number of options:\r\n\r\n* `--debug` runs the emulate in debug mode, enabling you to step through each instruction\r\n* `--trace` dumps the registers and stack after every step (implied by `--debug`)\r\n* `--speed` outputs the speed the emulator is running at in kHz\r\n* `--term TERM` specifies a terminal to use for text output (`null`, `debug`, `curses`, `pygame` or `qt`)\r\n\r\nI plan to work on an implementation of Forth on the DCPU-16 soon. Colour terminals and keyboard\r\nsupport are also planned.\r\n\r\n\r\n## Examples\r\n\r\nNow see [https://github.com/jtauber/DCPU-16-Examples](https://github.com/jtauber/DCPU-16-Examples)\r\n(although my assembler and emulator don't necessarily support everything there yet)","tagline":"A Python implementation of the DCPU-16. Complete with assembler, disassembler, debugger and video terminal implementations.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}